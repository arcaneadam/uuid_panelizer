<?php
/**
 * @file
 * Module File
 */
 
/**
 * Implements hook_entity_presave().
 */
function uuid_panelizer_entity_presave($entity, $type) { 
  if (isset($entity->panelizer)) {
    $fix_panel = FALSE;
    foreach ($entity->panelizer as $name => $panel) {
      if ($panel['entity_id'] != entity_id($type, $entity)) {
        $fix_panel = TRUE;
        break;
      }
    }
    if ($fix_panel) {
      $fixes = &drupal_static(__FUNCTION__, array());
      $fixes[$entity->uuid] = $entity->panelizer;
      unset($entity->panelizer);
    }
  }
}

/**
 * Implements hook_entity_insert().
 */
function uuid_panelizer_entity_insert($entity, $type) { 
  $fixes = &drupal_static('uuid_panelizer_entity_presave', array());
  if (isset($fixes[$entity->uuid])) {
    list($id, $vid, $bundle) = entity_extract_ids($type, $entity);
    foreach ($fixes[$entity->uuid] as $name => $panel) {
      $panel = (object) $panel;
      $panel->entity_id = $id;
      $panel->revision_id = $vid;
      $panel->display = (object) $panel->display;
      foreach($panel->display->content as &$pane) {
        $pane = (object) $pane;
      }
      $entity->panelizer[$name] = $panel;
    }
    unset($fixes[$entity->uuid]);
  }
}